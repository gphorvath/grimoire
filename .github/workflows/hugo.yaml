# Sample workflow for building and deploying a Hugo site to Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'docs/**'  # Only trigger on changes to docs directory
      - '.github/workflows/hugo.yml'  # And on workflow file changes

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0
    steps:
      # Add cache for Hugo modules and builds
      - name: Cache Hugo resources
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
            ./docs/resources
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # Fetch all history for .GitInfo and .Lastmod
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      
      # Add HTML validation
      - name: Setup HTML validation
        run: npm install -g html-validator-cli
      
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --source docs \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      
      # Add error checking
      - name: Check for Hugo errors
        run: |
          if [ -d "./docs/public" ]; then
            echo "Build succeeded"
          else
            echo "Build failed"
            exit 1
          fi
      
      # Validate HTML output
      - name: Validate HTML
        run: |
          find ./docs/public -name '*.html' -exec html-validator {} \;
        continue-on-error: true  # Optional: set to false if you want validation errors to fail the build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      # Add deployment verification
      - name: Verify deployment
        run: |
          curl -s --head --request GET ${{ steps.deployment.outputs.page_url }} | grep "200\|301"
        shell: bash